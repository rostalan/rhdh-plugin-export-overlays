name: Workspace Tests

on:
  workflow_run:
    workflows: [Pull Request Actions]
    types: [completed]

jobs:
  resolve:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    outputs:
      workspace: ${{ steps.meta.outputs.workspace }}
      overlayBranch: ${{ steps.meta.outputs.overlayBranch }}
      overlayRepo: ${{ steps.meta.outputs.overlayRepo }}
      overlayCommit: ${{ steps.meta.outputs.overlayCommit }}
      prNumber: ${{ steps.meta.outputs.pr }}
      publishedExports: ${{ steps.meta.outputs.publishedExports }}
    steps:
      - name: Download published-exports artifact
        uses: dawidd6/action-download-artifact@v6.1.1
        with:
          workflow: pr-actions.yaml
          name: published-exports
          workflow_conclusion: success
          pr: ${{ github.event.workflow_run.pull_requests[0].number }}
          workflow_search: true
          search_artifacts: true
          check_artifacts: true
          if_no_artifact_found: fail

      - name: Read meta
        id: meta
        run: |
          echo "Contents of meta.json:"
          cat meta.json || echo "meta.json not found"
          workspace=$(jq -r .workspace meta.json)
          overlayBranch=$(jq -r .overlayBranch meta.json)
          overlayRepo=$(jq -r .overlayRepo meta.json)
          overlayCommit=$(jq -r .overlayCommit meta.json)
          pr=$(jq -r '.pr // "null"' meta.json)
          publishedExports=$(cat published-exports.txt)
          echo "Parsed values: workspace=$workspace, overlayBranch=$overlayBranch, overlayRepo=$overlayRepo, overlayCommit=$overlayCommit, pr=$pr"
          test -z "$workspace" && { echo "Missing workspace in meta.json"; exit 1; }
          echo "workspace=$workspace" >> $GITHUB_OUTPUT
          echo "overlayBranch=$overlayBranch" >> $GITHUB_OUTPUT
          echo "overlayRepo=$overlayRepo" >> $GITHUB_OUTPUT
          echo "overlayCommit=$overlayCommit" >> $GITHUB_OUTPUT
          echo "pr=$pr" >> $GITHUB_OUTPUT
          echo "publishedExports<<EOF" >> $GITHUB_OUTPUT
          echo "$publishedExports" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Debug resolved metadata
        run: |
          echo "Workspace: ${{ steps.meta.outputs.workspace }}"
          echo "PR: ${{ steps.meta.outputs.pr }}, Overlay SHA: ${{ steps.meta.outputs.overlayCommit }}"

  prepare-test-config:
    needs: resolve
    if: ${{ needs.resolve.outputs.workspace != '' }}
    uses: ./.github/workflows/prepare-test-config.yaml
    with:
      overlay-branch: ${{ needs.resolve.outputs.overlayBranch }}
      overlay-repo: ${{ needs.resolve.outputs.overlayRepo }}
      workspace-path: ${{ needs.resolve.outputs.workspace }}
      published-exports: ${{ needs.resolve.outputs.publishedExports }}

  integration-tests:
    needs:
      - resolve
      - prepare-test-config
    if: ${{ needs.prepare-test-config.outputs.plugins_metadata_complete == 'true' }}
    uses: ./.github/workflows/run-plugin-integration-tests.yaml
    with:
      workspace-path: ${{ needs.resolve.outputs.workspace }}

  add-skipped-test-comment:
    if: ${{ needs.prepare-test-config.outputs.plugins_metadata_complete == 'false' && needs.resolve.outputs.prNumber != 'null' }}
    needs:
      - resolve
      - prepare-test-config
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Post skipped-test comment
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const pr = Number('${{ needs.resolve.outputs.prNumber }}');
            if (!pr) {
              console.log('No PR associated; skipping');
              return;
            }
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const body = `:warning: \n[Integration test workflow](${runUrl}) skipped because some plugin metadata files (\`<workspace>/metadata/*.yaml\`) were not found.\n\nAdd the corresponding metadata files to enable testing for this workspace.\n`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr,
              body,
            });

  add-test-result-comment:
    if: ${{ needs.prepare-test-config.outputs.plugins_metadata_complete == 'true' }}
    needs:
      - resolve
      - prepare-test-config
      - integration-tests
    concurrency:
      group: addTestResultComment-${{ github.ref_name }}
      cancel-in-progress: true
    permissions:
      contents: read
      pull-requests: write
      issues: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - name: Post test result comment and status
        uses: actions/github-script@v7.0.1
        with:
          script: |
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const success = '${{ needs.integration-tests.outputs.success }}' === 'true';
            const failed = `\n${{ toJSON(needs.integration-tests.outputs.failed-plugins) }}`.trim();
            const pr = Number('${{ needs.resolve.outputs.prNumber }}');
            const overlayCommit = '${{ needs.resolve.outputs.overlayCommit }}';
            
            if (!pr) {
              console.log('No PR associated; skipping');
              return;
            }
            
            // Get current PR head SHA
            const { data: prData } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr,
            });
            
            // Use PR head if different from overlayCommit (re-test), else use overlayCommit (immediate publish)
            const sha = prData.head.sha !== overlayCommit ? prData.head.sha : overlayCommit;
            console.log(`Status SHA: ${sha} (PR head: ${prData.head.sha}, overlay: ${overlayCommit})`);
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              description: 'Workspace Tests',
              state: success ? 'success' : 'failure',
              target_url: runUrl,
              context: 'test',
            });
            
            const body = success
              ? `:white_check_mark: [Integration test workflow](${runUrl}) passed. All plugins loaded successfully.\n`
              : `:x: \n[Integration test workflow](${runUrl}) failed. These plugins failed to load:${failed ? `