name: Publish RHDH Release Dynamic Plugin Images 
on:
  workflow_call:

concurrency:
  group: ${{ github.workflow_ref }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    name: Prepare
    outputs:
      last-published-commit: ${{ steps.get-last-published-commit.outputs.last-published-commit }}

    steps:
      - name: Get last published commit
        id: get-last-published-commit
        uses: actions/github-script@v7
        env:
          INPUT_RELEASE_BRANCH: ${{ github.ref_name }}      
        with:
          script: |
            core.info(`Getting latest commit on branch ${core.getInput('release_branch')}`);
            const response = await github.rest.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: core.getInput('release_branch'),
              per_page: 100,
            });
            for (const commit of response.data) {
              if (commit.parents?.length == 1) {
                core.info(`Skipping commit ${commit.sha}, not a merge commit`);
                continue;
              }
              if (context.payload.commits.some(c => c.id === commit.sha)) {
                core.info(`Skipping commit ${commit.sha}, it's part of the push`);
                continue;
              }
              const commitChecks = await github.paginate(
                github.rest.checks.listForRef, {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: commit.sha,
                }
              );

              const exportChecks = commitChecks.filter(c => c.name.startsWith('export /'));
              if (exportChecks.length == 0){
                core.info(`Skipping commit ${commit.sha}, No publish check`);
                continue;
              }
              if (exportChecks.every(c => c.status === 'completed' && c.conclusion === 'success')) {
                core.info(`Last published commit to compare with: ${commit.sha}`);
                core.setOutput('last-published-commit', commit.sha);
                return;
              }
            }
            core.info(`Last published commit not found`);
            core.setOutput('last-published-commit', '');
            
  export:
    uses: redhat-developer/rhdh-plugin-export-utils/.github/workflows/export-workspaces-as-dynamic.yaml@main
    needs:
      - prepare

    with:
      publish-container: true
      image-repository-prefix: ${{ format('ghcr.io/{0}', github.repository) }}
      last-publish-commit: ${{ needs.prepare.outputs.last-published-commit }}
      image-tag-prefix: ${{ github.ref_name == 'main' && 'next__' || '' }}
      image-registry-user: ${{ github.actor }}

    secrets:
      image-registry-password: ${{ secrets.GITHUB_TOKEN }}
  
    permissions:
      contents: write
      attestations: write
      packages: write
      id-token: write
